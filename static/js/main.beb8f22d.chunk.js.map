{"version":3,"sources":["Choice.js","assets/paper.png","assets/rock.png","assets/scissors.png","App.js","reportWebVitals.js","index.js"],"names":["Choice","props","src","image","style","height","onClick","choice","CHOICES","getRandomChoice","randomNumer","random","Math","floor","getRandomNumber","App","handleClickReset","setState","playerScore","computerScore","handleClickChoice","playerChoice","computerChoice","console","log","alert","state","this","className","rockImage","paperImage","scissorsImage","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQASeA,MATf,SAAgBC,GACZ,OACI,qBACIC,IAAKD,EAAME,MACXC,MAAuB,CAACC,OAAQ,KAChCC,QAAS,kBAAML,EAAMK,QAAQL,EAAMM,YCLhC,MAA0B,kCCA1B,MAA0B,iCCA1B,MAA0B,qCCOnCC,G,MAAU,CAAC,OAAQ,QAAS,aAOlC,SAASC,IACP,IAAMC,EANR,WACE,IAAMC,EAASC,KAAKD,SACpB,OAAOC,KAAKC,MAAe,EAATF,GAIEG,GACpB,OAAON,EAAQE,G,IAyFFK,E,kDArFb,WAAYd,GAAO,IAAD,8BAChB,cAAMA,IAkBRe,iBAAmB,WACjB,EAAKC,SAAS,CACZC,YAAa,EACbC,cAAe,KAtBD,EA0BlBC,kBAAoB,SAACC,GACnB,IAAMC,EAAiBb,IAGvB,GAFAc,QAAQC,IAAI,iBAAkBH,EAAcC,GAEzCD,IAAiBC,EAClB,OAAOG,MAAM,yBAIO,UAAjBJ,GAA+C,SAAnBC,GACX,SAAjBD,GAA8C,aAAnBC,GACV,aAAjBD,GAAkD,UAAnBC,GAEhC,EAAKL,SAAS,CAACC,YAAa,EAAKQ,MAAMR,YAAc,IACrDO,MAAM,8BAGN,EAAKR,SAAS,CAACE,cAAe,EAAKO,MAAMP,cAAgB,IACzDM,MAAM,iCAzCV,EAAKC,MAAQ,CACXR,YAAa,EACbC,cAAe,GALD,E,sDASlB,WACgC,IAA3BQ,KAAKD,MAAMR,aACZO,MAAM,yBACNE,KAAKX,oBACiC,IAA7BW,KAAKD,MAAMP,gBACpBM,MAAM,2BACNE,KAAKX,sB,oBAkCT,WACE,OACE,sBAAKY,UAAU,MAAf,UACE,0DAEE,sBAAKA,UAAU,aAAf,UACI,4CACA,4CAAeD,KAAKD,MAAMR,eAC1B,uBACA,8CAAiBS,KAAKD,MAAMP,oBAGhC,qBAAKS,UAAU,SAAf,SACI,wBAAQtB,QAASqB,KAAKX,iBAAtB,qBAGN,cAAC,EAAD,CACET,OAAO,OACPJ,MAAO0B,EACPvB,QAASqB,KAAKP,oBAEhB,cAAC,EAAD,CACEb,OAAO,QACPJ,MAAO2B,EACPxB,QAASqB,KAAKP,oBAEhB,cAAC,EAAD,CACEb,OAAO,WACPJ,MAAO4B,EACPzB,QAASqB,KAAKP,2B,GA/ENY,aCPHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.beb8f22d.chunk.js","sourcesContent":["function Choice(props){\n    return (\n        <img \n            src={props.image} \n            style={{ width: 200 }, {height: 200}}\n            onClick={() => props.onClick(props.choice)}\n        />\n    )\n}\nexport default Choice;","export default __webpack_public_path__ + \"static/media/paper.6e9a4b2d.png\";","export default __webpack_public_path__ + \"static/media/rock.5feff4a6.png\";","export default __webpack_public_path__ + \"static/media/scissors.04c1f92c.png\";","import { Component } from 'react';\nimport Choice from './Choice'\nimport paperImage from './assets/paper.png';\nimport rockImage from './assets/rock.png';\nimport scissorsImage from './assets/scissors.png';\nimport './App.css';\n\nconst CHOICES = ['rock', 'paper', 'scissors']\n\nfunction getRandomNumber(){\n  const random = Math.random();\n  return Math.floor(random * 3);\n}\n\nfunction getRandomChoice(){\n  const randomNumer = getRandomNumber();\n  return CHOICES[randomNumer];\n}\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      playerScore: 0,\n      computerScore: 0\n    };\n  }\n\n  componentDidUpdate(){\n    if(this.state.playerScore === 5){\n      alert('Player Won the Game !');\n      this.handleClickReset();\n    } else if (this.state.computerScore === 5){\n      alert('Computer Won the Game !');\n      this.handleClickReset();\n    }\n  }\n\n  handleClickReset = () => {\n    this.setState({\n      playerScore: 0,\n      computerScore: 0\n    });\n  }\n\n  handleClickChoice = (playerChoice) => {\n    const computerChoice = getRandomChoice();\n    console.log('CLICKED CHOICE', playerChoice, computerChoice)\n\n    if(playerChoice === computerChoice){\n      return alert('The round was a draw!');\n    }\n\n    if(\n        (playerChoice === 'paper' && computerChoice === 'rock') ||\n        (playerChoice === 'rock' && computerChoice === 'scissors') ||\n        (playerChoice === 'scissors' && computerChoice === 'paper') \n      ) {\n        this.setState({playerScore: this.state.playerScore + 1});\n        alert('Player won the round! :D');\n        //Player Won\n      } else {\n        this.setState({computerScore: this.state.computerScore + 1});\n        alert('Computer won the round! :( ');\n        //Computer Won\n      }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Rock Paper Scissors Game</h1>\n    \n          <div className=\"scoreboard\">\n              <h2>Scoreboard</h2>\n              <span>Player: {this.state.playerScore}</span>\n              <br/>\n              <span>Computer: {this.state.computerScore}</span>\n          </div>\n\n          <div className=\"button\">\n              <button onClick={this.handleClickReset}>Reset</button>  \n          </div>\n\n        <Choice\n          choice=\"rock\" \n          image={rockImage} \n          onClick={this.handleClickChoice}\n        />\n        <Choice \n          choice=\"paper\"\n          image={paperImage} \n          onClick={this.handleClickChoice}\n        />\n        <Choice \n          choice=\"scissors\" \n          image={scissorsImage} \n          onClick={this.handleClickChoice}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}